{"version":3,"file":"static/webpack/static/development/pages/schedule.js.44e2f3610c133c561d92.hot-update.js","sources":["webpack:///./pages/schedule/components/Students/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport students from \"./students.scss\";\nimport schedule from \"../../../../api/schedule.json\";\n\nconst Students = () => {\n  const [courseBtn, setCourse] = useState(1);\n  const [specialty, setSpecialty] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [search, updateSearch] = useState(\"\");\n  const [visible, increaseVisible] = useState(5);\n\n  let scheduleDay = [];\n\n  // бере дані з локалки\n  useEffect(() => {\n    const specialty = localStorage.getItem(\"specialty\");\n    specialty ? setSpecialty(specialty) : setSpecialty(\"\");\n\n    const day = localStorage.getItem(\"day\");\n    day ? setDay(day) : setDay(\"\");\n\n    const search = localStorage.getItem(\"search\");\n    search ? updateSearch(search) : updateSearch(\"\");\n  }, []);\n\n  // зберігають дані в локалку\n  useEffect(() => {\n    window.localStorage.setItem(\"specialty\", specialty);\n  }, [specialty]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"day\", day);\n  }, [day]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"search\", search);\n  }, [search]);\n\n  useEffect(() => {\n    filteredSchedule;\n  });\n\n  // Фільтр даних по курсу, спеціальності, дню та пошук\n  let filteredSchedule = schedule.map((course) =>\n    course.filter((schoolDay) => {\n      let byCourse = schoolDay.course === courseBtn;\n      let bySpecialty = schoolDay.specialty.indexOf(specialty) !== -1;\n      let byDay = schoolDay.day.indexOf(day) !== -1;\n      let bySearch =\n        schoolDay.group.indexOf(search.toUpperCase()) !== -1 ||\n        schoolDay.specialty.indexOf(search.toUpperCase()) !== -1;\n\n      if (search === \"\" && courseBtn != 0) {\n        return byCourse && bySpecialty && byDay;\n      } else {\n        return byDay && bySearch;\n      }\n    })\n  );\n\n  // Всі вхідні дані заносяться у масив. За допомогою масиву і слайсу реалізовується пагінація\n  filteredSchedule.map((course) =>\n    course.map((group) => scheduleDay.push(group))\n  );\n\n  // Маска вводу для пошуку групи\n  const mask = (value) => {\n    const regExp1 = /^[а-яА-ЯіІa-zA-Z]{2}/g;\n    const regExp2 = /^([а-яА-ЯіІa-zA-Z]{2})?[-]?([0-9]{2})/g;\n    // const regExp3 = /^([а-яА-ЯіІa-zA-Z]{2})?[-]?([0-9]{2})?[-]?([0-4]{2})/g;\n    while (value.length <= 8) {\n      if (value.length <= 2) {\n        return updateSearch(value.replace(regExp1, \"$&-\").toUpperCase());\n      } else if (value.length >= 3 && value.length <= 5) {\n        return updateSearch(value.replace(regExp2, \"$&-0\"));\n      } else if (value.length >= 6 && value.length <= 8) {\n        return updateSearch(value);\n      }\n    }\n  };\n\n  return (\n    <div className={students.students}>\n      <div className={students.filter}>\n        <div className={students.radios}>\n          Курс:{\" \"}\n          <span className={students.radio}>\n            <label>\n              1\n              <input\n                type=\"radio\"\n                name=\"course\"\n                defaultChecked\n                onChange={() => setCourse(1)}\n              />\n            </label>\n          </span>\n          <span className={students.radio}>\n            <label>\n              2\n              <input type=\"radio\" name=\"course\" onChange={() => setCourse(2)} />\n            </label>\n          </span>\n          <span className={students.radio}>\n            <label>\n              3\n              <input type=\"radio\" name=\"course\" onChange={() => setCourse(3)} />\n            </label>\n          </span>\n          <span className={students.radio}>\n            <label>\n              4\n              <input type=\"radio\" name=\"course\" onChange={() => setCourse(4)} />\n            </label>\n          </span>\n        </div>\n        <select\n          id={students.specialty}\n          name=\"specialty\"\n          value={specialty}\n          onChange={() => setSpecialty(event.target.value)}\n        >\n          <option value=\"\">Оберіть спеціальність</option>\n          <option value=\"PI\">Програмна інженерія</option>\n          <option value=\"KI\">Комп'ютерна інженерія</option>\n          <option value=\"AK\">\n            Автоматизація комп'ютерно-інтегровані технології\n          </option>\n          <option value=\"L\">Електроніка</option>\n        </select>\n        <select\n          id=\"days\"\n          name=\"days\"\n          value={day}\n          onChange={() => setDay(event.target.value)}\n        >\n          <option value=\"\">Оберіть день</option>\n          <option value=\"понеділок\">Понеділок</option>\n          <option value=\"вівторок\">Вівторок</option>\n          <option value=\"середа\">Середа</option>\n          <option value=\"четвер\">Четвер</option>\n          <option value=\"п'ятниця\">П'ятниця</option>\n        </select>\n        <input\n          type=\"search\"\n          name=\"search\"\n          id=\"search\"\n          value={search}\n          // onChange={() => mask(event.target.value)}\n          onChange={() => updateSearch(event.target.value)}\n          placeholder=\"Введіть назву групи\"\n        />\n      </div>\n      <div className={students.schedule}>\n        {scheduleDay.slice(0, visible).map((lessonDay, key) => (\n          <Schedule day={lessonDay} key={key} selectedDay={day} />\n        ))}\n      </div>\n      {scheduleDay.length > visible ? (\n        <button\n          className={students.pagination}\n          onClick={() => increaseVisible(visible + 5)}\n        >\n          Загрузити більше\n        </button>\n      ) : undefined}\n    </div>\n  );\n};\n\n// Розклад студентів\nconst Schedule = (props) => {\n  return (\n    <div className={students.day}>\n      <div className={students.header}>\n        <span>{props.day.day}</span>\n        {props.day.day === \"понеділок\" ? props.day.group : undefined}\n        {props.day.day !== \"понеділок\" &&\n        props.selectedDay !== \"понеділок\" &&\n        props.selectedDay !== \"\"\n          ? props.day.group\n          : undefined}\n      </div>\n      {props.day.lessons.map((lesson) => (\n        <div className={students.lesson}>\n          <div className={students.start}>\n            <div className={students.num}>{lesson.num} пара</div>\n            <div>{lesson.start}</div>\n          </div>\n\n          <div className={students.subjectAndLecturer}>\n            <div className={students.subject}>{lesson.subject}</div>\n            <span className={students.lecturer}>{lesson.lecturer}</span>\n            <span>{lesson.audience}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Students;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAiBA;AAAA;AACA;AAAA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAgBA;AACA;AACA;;;;A","sourceRoot":""}